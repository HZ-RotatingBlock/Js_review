//__filename:当前文件被解析过后的绝对路径(注意是两个下划线)
//****************************模块加载*******************************
//绝对路径:填写绝对路径;相对路径:与当前文件位置相对的路径(如果加载同文件层级下的js文件时没有./文件名的形式读取模块时，只是直接写文件名就会被nodejs默认加载核心模块或者是node_modules中的模块)
// 1-首先按照加载的模块文件名进行查找
// 2-如果没有找到，则会在模块文件名后加上js后缀进行查找
// 3-如果还是没有找到，则会在文件名称后加上.json的后缀进行查找
// 4-如果还是没有找到，则会在文件名后加上.node的后缀，进行查找
//在一个模块中通过var定义的变量，其作用域范围是当前模块，外部不能直击的访问，如果我们想一个模块能访问另一个模块当中定义的变量，可以：
// 1-变量作为global对象的一个属性(但是这种方法是不推荐的)
// 2-使用模块对象 module：保存和提供当前模块下的一些信息(它也属于模块下的而不是全局的),在这个module对象下有一个子对象，我们可以通过这个对象把一个模块中的局部变量对象机狠心提供访问,require方法的返回自更换其实就是被加载模块中的module.exports;在模块作用域内还有一个内置的模块对象，exports,他起始就是module.exports 
require("./2.js");
console.log(__filename);